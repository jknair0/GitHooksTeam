/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package tech.jknair.githooksteam

import org.gradle.testkit.runner.GradleRunner
import java.io.File
import kotlin.test.Test
import kotlin.test.assertTrue

/**
 * A simple functional test for the 'tech.jknair.githooksteam' plugin.
 */
class GitHooksTeamPluginFunctionalTest {

    @Test
    fun setsGitHooksCorrectly() {
        // Setup the test build
        val projectDir = File("build/functionalTest")
        projectDir.mkdirs()
        projectDir.resolve(".githooks").mkdirs()
        projectDir.resolve(".git").mkdirs()
        projectDir.resolve(".githooks/sample").writeText("This is a sample hooks file")
        projectDir.resolve("settings.gradle.kts").writeText("")
        projectDir.resolve("build.gradle.kts").writeText("""
            plugins {
                id("java")
                id("tech.jknair.githooksteam")
            }
        """.trimIndent())

        // Run the build
        val runner = GradleRunner.create()
        runner.forwardOutput()
        runner.withPluginClasspath()
        runner.withArguments("assemble")
        runner.withProjectDir(projectDir)
        @Suppress("UNUSED_VARIABLE")
        val result = runner.build()

        // Verify the result
        assertTrue(projectDir.resolve(".git/hooks").exists(), ".git/hooks does not exist")
        assertTrue(projectDir.resolve(".git/hooks/sample").exists(), ".git/hooks/sample file does not exit")
        assertTrue(projectDir.resolve(".git/hooks/sample").canExecute(), ".git/hooks/sample does not have execute permission")
    }

}
